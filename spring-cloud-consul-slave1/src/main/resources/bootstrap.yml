server:
  port: 4010
  servlet:
    context-path: /slave1
spring:
  application:
    name: consul-slave1

#  cloud:
#    consul:
#      host: 127.0.0.1  #consul server
#      port: 8500
#      discovery:    # spring-boot-starter-actuator
#        health-check-path: /actuator/health
#        health-check-interval: 10s #运行状况检查的频率（例如10秒），默认为10秒。
#        service-name: consul-slave-1 #注册到consul的服务名称
#        register: true #注册到consul

#    zookeeper:  #使用zk注册中心
#      connect-string: 127.0.0.1:21890
  cloud:
    nacos:  #使用nacos注册中心
      discovery:
        server-addr: 127.0.0.1:13100,127.0.0.1:13101,127.0.0.1:13102
        namespace: a998603d-3546-4ddc-9099-2ed82a6f3a68 #开发环境
        group: DEFAULT_GROUP #组
      config:
        server-addr: 127.0.0.1:13100,127.0.0.1:13101,127.0.0.1:13102
        file-extension: yaml  #指定读取的配置文件后缀, dataId 默认就是spring.application.name + yaml, 可以通过prefix修改
        namespace: a998603d-3546-4ddc-9099-2ed82a6f3a68 #开发环境
        group: DEFAULT_GROUP #组
        prefix: slave1  #文件名 -- 如果没有配置则默认为 ${spring.appliction.name} (优先级高)
        extension-configs:  #扩展配置,多个配置文件
          - dataId: xiapeixin.yaml
            group: DEFAULT_GROUP
            refresh: false
          - dataId: xiapeixin2.yaml
            group: DEFAULT_GROUP
            refresh: false

      #Data ID的格式如下:   ${prefix}-${spring.profile.active}.${file-extension}
      #spring.profile.active 即为当前环境对应的 profile。
      #注意：当 spring.profile.active 为空时，对应的连接符 - 也将不存在
      #，dataId 的拼接格式变成 ${prefix}.${file-extension}

  zipkin:  #链路追踪
    base-url: http://127.0.0.1:9411/
  sleuth:
    sampler:
      probability: 1 #percentage是采样比例

#eureka:
#  instance:
#    prefer-ip-address: true #使用ip注册
#    instance-id: consumer-0-hystrix  #自定义服务信息,服务熔断
#  client:
#    service-url: #服务注册地址
#      defaultZone: http://xia:123@springcloud.eureka0:3100/eureka/eureka/,http://xia:123@springcloud.eureka1:3101/eureka/eureka/,http://xia:123@springcloud.eureka2:3102/eureka/eureka/

ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000


feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic

#feign:
#  hystrix:
#    enabled: true
#  client:
#    config:
#      feignName:
#        connectTimeout: 5000  # 相当于Request.Options
#        readTimeout: 5000     # 相当于Request.Options
#        # 配置Feign的日志级别，相当于代码配置方式中的Logger
#        loggerLevel: full
#        # Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
#        errorDecoder: com.example.SimpleErrorDecoder
#        # 配置重试，相当于代码配置方式中的Retryer
#        retryer: com.example.SimpleRetryer
#        # 配置拦截器，相当于代码配置方式中的RequestInterceptor
#        requestInterceptors:
#          - com.example.FooRequestInterceptor
#          - com.example.BarRequestInterceptor
#        decode404: false


#禁止超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enable: false

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  config: classpath:logback-spring.xml
